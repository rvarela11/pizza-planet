{"version":3,"sources":["state/index.js","components/Header/queries.js","components/Header/Header.js","components/MenuCard/mutations.js","components/MenuCard/MenuCard.js","components/Menu/queries.js","components/Menu/Menu.js","components/Order/queries.js","components/OrderCard/mutations.js","components/OrderCard/OrderCard.js","components/Order/Order.js","components/CartCard/CartCard.js","components/Cart/queries.js","components/Cart/mutations.js","components/Cart/Cart.js","components/Footer/Footer.js","components/App/App.js","index.js"],"names":["defaults","cartItems","totalNumberOfItems","selectedPizzaSizeFromMenu","resolvers","Mutation","updatePizzaSizeByName","_","_ref","_ref2","cache","writeData","data","toUpperCase","addItemToCart","_ref3","_ref4","name","totalPrice","totalToppings","push","__typename","removeItemFromCart","_ref5","_ref6","index","defaultCartIems","splice","defaultTotalNumberOfItems","sumOfDefaultTotalNumberOfItems","reduce","a","b","getTotalNumberOfItems","gql","_templateObject","Header","react_default","createElement","react_apollo_browser_umd","query","loading","className","Link","to","IconButton_default","Badge_default","badgeContent","color","invisible","length","index_es","mutations_templateObject","withRouter","props","item","mutation","aria-label","description","onClick","variables","tabIndex","role","charAt","basePrice","concat","maxToppings","getPizzas","queries_templateObject","Menu","fetchPolicy","pizzaSizes","map","components_MenuCard_MenuCard","key","getPizzaSizeByNameFromState","Order_queries_templateObject","getPizzaSizeByName","_templateObject2","OrderCard_mutations_templateObject","OrderCard","state","checked","remainingToppings","handleToggle","value","_this","currentIndex","indexOf","newChecked","Object","toConsumableArray","setState","updateRemainingToppings","_this$props$data","toppings","maxT","updateTotalPrice","totalPriceOfToppings","topping","price","sumOfTotalPriceOfToppings","this","checkedDefaultSelectedValues","defaultSelected","_this2","_this$props","classes","_this$props$data2","_this$state","Button_default","button","variant","toFixed","List_default","root","ListItem_default","dense","disabled","undefined","Checkbox_default","disableRipple","ListItemText_default","primary","ListItemSecondaryAction_default","Component","withStyles","theme","width","maxWidth","margin","spacing","unit","Order","skip","pizzaSizeByName","components_OrderCard_OrderCard","CartCard","totalPriceOfPizzas","sumOfTotalPriceOfPizzas","getIndexToRemoveItem","removeItem","prevProps","listItem","secondary","Delete_default","borderBottom","getCartItems","Cart_queries_templateObject","Cart_mutations_templateObject","Cart","refetch","components_CartCard_CartCard","Footer","App","components_Header_Header","Switch","Route","exact","path","component","components_Footer_Footer","InMemoryCache","stateLink","withClientState","link","ApolloLink","from","onError","graphQLErrors","networkError","forEach","message","locations","console","log","apolloLogger","HttpLink","uri","credentials","client","ApolloClient","createMuiTheme","palette","main","status","danger","typography","useNextVariants","ReactDOM","render","BrowserRouter","styles","components_App_App","document","getElementById"],"mappings":"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","file":"static/js/main.1d7e5fd9.chunk.js","sourcesContent":["export const defaults = {\n    cartItems: [],\n    totalNumberOfItems: [],\n    selectedPizzaSizeFromMenu: null\n};\n\nexport const resolvers = {\n    Mutation: {\n        updatePizzaSizeByName: (_, { selectedPizzaSizeFromMenu }, { cache }) => {\n            cache.writeData({\n                data: {\n                    selectedPizzaSizeFromMenu: selectedPizzaSizeFromMenu.toUpperCase()\n                }\n            });\n            return null;\n        },\n        addItemToCart: (_, { name, totalPrice, totalToppings }, { cache }) => {\n            cache.writeData({\n                data: {\n                    cartItems: defaults.cartItems.push({\n                        name,\n                        totalPrice,\n                        totalToppings,\n                        __typename: 'cartItem'\n                    }),\n                    totalNumberOfItems: defaults.totalNumberOfItems.push(1)\n                }\n            });\n            return null;\n        },\n        removeItemFromCart: (_, { index }, { cache }) => {\n            // Removing cart items\n            const defaultCartIems = defaults.cartItems;\n            defaultCartIems.splice(index, 1);\n\n            // Removing the cart items number that is displaying on the cart icon\n            const defaultTotalNumberOfItems = defaults.totalNumberOfItems;\n            defaultTotalNumberOfItems.splice(index, 1);\n            const sumOfDefaultTotalNumberOfItems = defaultTotalNumberOfItems.reduce((a, b) => a + b, 0);\n\n            cache.writeData({\n                data: {\n                    cartItems: defaultCartIems,\n                    totalNumberOfItems: sumOfDefaultTotalNumberOfItems\n                }\n            });\n            return null;\n        }\n\n    }\n};\n","import gql from 'graphql-tag';\n\nexport const getTotalNumberOfItems = gql`\n    query getTotalNumberOfItems {\n        totalNumberOfItems @client\n    }\n`;\n","// @vendors\nimport React from 'react';\nimport { Query } from 'react-apollo';\nimport { Link } from 'react-router-dom';\nimport IconButton from '@material-ui/core/IconButton';\nimport Badge from '@material-ui/core/Badge';\nimport { ShoppingCart } from '@material-ui/icons/';\n\n// @queries\nimport { getTotalNumberOfItems } from './queries';\n\n// @styles\nimport './Header.scss';\n\nconst Header = () => (\n    <Query query={getTotalNumberOfItems}>\n        {({ data: { totalNumberOfItems }, loading }) => {\n            if (loading) return null;\n            return (\n                <div className=\"header\">\n                    <Link to=\"/\" className=\"link header__logo\" />\n                    <Link to=\"/cart\" className=\"link\">\n                        <IconButton>\n                            <Badge\n                                badgeContent={totalNumberOfItems}\n                                color=\"secondary\"\n                                invisible={totalNumberOfItems.length === 0 || totalNumberOfItems === 0}\n                            >\n                                <ShoppingCart />\n                            </Badge>\n                        </IconButton>\n                    </Link>\n                </div>\n            );\n        }}\n    </Query>\n);\n\nexport default Header;\n","import gql from 'graphql-tag';\n\nexport const updatePizzaSizeByName = gql`\n    mutation updatePizzaSizeByName($selectedPizzaSizeFromMenu: String) {\n        updatePizzaSizeByName(selectedPizzaSizeFromMenu: $selectedPizzaSizeFromMenu) @client\n    }\n`;\n","// @vendors\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { Mutation } from 'react-apollo';\nimport { Link } from 'react-router-dom';\nimport { withRouter } from 'react-router';\n\n// @mutations\nimport { updatePizzaSizeByName } from './mutations';\n\n// @styles\nimport './MenuCard.scss';\n\nconst MenuCard = (props) => {\n    const { item } = props;\n    return (\n        <Mutation mutation={updatePizzaSizeByName}>\n            {updatePizzaSizeByName => (\n                <Link\n                    to=\"/order\"\n                    className=\"menu-card link\"\n                    aria-label={item.description}\n                    onClick={() => updatePizzaSizeByName({ variables: { selectedPizzaSizeFromMenu: item.name } })}\n                    tabIndex=\"0\"\n                    role=\"button\"\n                >\n                    <div className=\"menu-card__size\">\n                        <div className=\"menu-card__size-label\">\n                            {item.name.charAt(0)}\n                        </div>\n                        <div className=\"menu-card__size-name\">\n                            {item.name}\n                        </div>\n                    </div>\n                    <div className=\"menu-card__description\">\n                        <div className=\"menu-card__description-basePrice\">\n                            {item.basePrice}\n                        </div>\n                        <div className=\"menu-card__description-maxToppings\">\n                            {`Max Toppings: ${item.maxToppings || 7}`}\n                        </div>\n                    </div>\n                </Link>\n            )}\n        </Mutation>\n    );\n};\n\nMenuCard.propTypes = {\n    item: PropTypes.object.isRequired\n};\n\nexport default withRouter(MenuCard);\n","import gql from 'graphql-tag';\n\nexport const getPizzas = gql`\n    query getPizzas {\n        pizzaSizes {\n          name\n          maxToppings\n          basePrice\n        }\n    }\n`;\n","// @vendors\nimport React from 'react';\nimport { Query } from 'react-apollo';\n\n// @components\nimport MenuCard from '../MenuCard/MenuCard';\n\n// @queries\nimport { getPizzas } from './queries';\n\n// @styles\nimport './Menu.scss';\n\nconst Menu = () => (\n    <Query query={getPizzas} fetchPolicy=\"network-only\">\n        {({ data: { pizzaSizes }, loading }) => {\n            if (loading) return null;\n            return (\n                <div className=\"menu__selection\">\n                    <h3 className=\"menu__title\">MENU</h3>\n                    <div className=\"menu\">\n                        <div className=\"menu__list\">\n                            { pizzaSizes.map((item, index) => <MenuCard key={index} item={item} />) }\n                        </div>\n                    </div>\n                </div>\n            );\n        }}\n    </Query>\n);\n\nexport default Menu;\n","import gql from 'graphql-tag';\n\nexport const getPizzaSizeByNameFromState = gql`\n    query getPizzaSizeByNameFromState {\n        selectedPizzaSizeFromMenu @client\n    }\n`;\n\nexport const getPizzaSizeByName = gql`\n    query getPizzaSizeByName($selectedPizzaSizeFromMenu: String) {\n        pizzaSizeByName(name: $selectedPizzaSizeFromMenu) {\n            name\n            maxToppings\n            basePrice\n            toppings {\n                topping {\n                    name\n                    price\n                }\n                defaultSelected\n            }\n        }\n    }\n`;\n","import gql from 'graphql-tag';\n\nexport const addItemToCart = gql`\n    mutation addItemToCart (\n        $name: String,\n        $totalPrice: Int,\n        $totalToppings: Int,\n        ) {\n        addItemToCart(\n            name: $name,\n            totalPrice: $totalPrice,\n            totalToppings: $totalToppings,\n        ) @client\n    }\n`;\n","// @vendors\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Mutation } from 'react-apollo';\nimport { Link } from 'react-router-dom';\nimport { withStyles } from '@material-ui/core/styles';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Button from '@material-ui/core/Button';\n\n// @mutations\nimport { addItemToCart } from './mutations';\n\n// @styles\nimport './OrderCard.scss';\n\n// Overriding material-ui classes\nconst styles = theme => ({\n    root: {\n        width: '100%',\n        maxWidth: 360,\n        margin: 'auto'\n    },\n    button: {\n        width: '5rem',\n        margin: theme.spacing.unit,\n        color: 'white'\n    }\n});\n\nclass OrderCard extends Component {\n    state = {\n        checked: [],\n        remainingToppings: null,\n        totalPrice: 0,\n        totalToppings: 0\n    };\n\n    componentDidMount() {\n        const { data: { toppings } } = this.props;\n        const checkedDefaultSelectedValues = [];\n        // Map toppings for defaultSelected and setState checked to the ones that are true\n        toppings.map(value => value.defaultSelected ? checkedDefaultSelectedValues.push(value) : null);\n        this.setState({\n            checked: checkedDefaultSelectedValues\n        }, this.updateRemainingToppings);\n    }\n\n    handleToggle = (value) => {\n        const { checked } = this.state;\n        const currentIndex = checked.indexOf(value);\n        const newChecked = [...checked];\n\n        if (currentIndex === -1) {\n            newChecked.push(value);\n        } else {\n            newChecked.splice(currentIndex, 1);\n        }\n\n        this.setState({\n            checked: newChecked\n        }, this.updateRemainingToppings);\n    };\n\n    updateRemainingToppings = () => {\n        const { data: { maxToppings, toppings } } = this.props;\n        const { checked } = this.state;\n        // Updating remainingToppings\n        const maxT = maxToppings || toppings.length;\n        this.setState({\n            remainingToppings: maxT - checked.length,\n            totalToppings: checked.length\n        }, this.updateTotalPrice);\n    }\n\n    updateTotalPrice = () => {\n        const { data: { basePrice } } = this.props;\n        const { checked } = this.state;\n        const totalPriceOfToppings = [];\n        // Push total price of toppings to array 'totalPriceOfToppings'\n        // Next find the sum of totalPriceOfToppings and setState to totalPrice\n        checked.map(value => totalPriceOfToppings.push(value.topping.price));\n        const sumOfTotalPriceOfToppings = totalPriceOfToppings.reduce((a, b) => a + b, 0);\n        this.setState({ totalPrice: basePrice + sumOfTotalPriceOfToppings });\n    }\n\n    render() {\n        const { classes, data: { name, toppings } } = this.props;\n        const {\n            checked,\n            remainingToppings,\n            totalPrice,\n            totalToppings\n        } = this.state;\n        return (\n            <div className=\"order-card\">\n                <div className=\"order-card__buttons\">\n                    <Mutation mutation={addItemToCart}>\n                        {addItemToCart => (\n                            <Button\n                                className={classes.button}\n                                color=\"primary\"\n                                onClick={() => addItemToCart({ variables: { name, totalPrice, totalToppings } })}\n                                variant=\"contained\"\n                            >\n                            ADD\n                            </Button>\n                        )}\n                    </Mutation>\n                    <Button className={classes.button} color=\"secondary\" variant=\"contained\">\n                        <Link to=\"/\" className=\"link\"> MENU </Link>\n                    </Button>\n                    <Button className={classes.button} color=\"secondary\" variant=\"contained\">\n                        <Link to=\"/cart\" className=\"link\"> CART </Link>\n                    </Button>\n                </div>\n                <div className=\"order-card__details\">\n                    { /*eslint-disable */ }\n                    <h3 className=\"order-card__details-label\">Size: <span>{ name }</span></h3>\n                    <h3 className=\"order-card__details-label\">Remaining toppings: <span>{ remainingToppings }</span></h3>\n                    <h3 className=\"order-card__details-label\">Total: <span>${ totalPrice.toFixed(2) }</span></h3>\n                    { /* eslint-enable */}\n                </div>\n                <List className={classes.root}>\n                    {toppings.map((value, index) => (\n                        <ListItem\n                            button\n                            dense\n                            disabled={remainingToppings === 0 && checked.indexOf(value) === -1}\n                            key={index}\n                            onClick={() => this.handleToggle(value)}\n                            role={undefined}\n                        >\n                            <Checkbox\n                                checked={checked.indexOf(value) !== -1}\n                                disableRipple\n                                tabIndex={-1}\n                            />\n                            <ListItemText primary={value.topping.name} />\n                            <ListItemSecondaryAction>\n                                <ListItemText primary={`$ ${value.topping.price}`} />\n                            </ListItemSecondaryAction>\n                        </ListItem>\n                    ))}\n                </List>\n            </div>\n        );\n    }\n}\n\nOrderCard.propTypes = {\n    classes: PropTypes.object.isRequired,\n    data: PropTypes.object.isRequired\n};\n\nexport default withStyles(styles)(OrderCard);\n","// @vendors\nimport React from 'react';\nimport { Query } from 'react-apollo';\n\n// @queries\nimport { getPizzaSizeByNameFromState, getPizzaSizeByName } from './queries';\n\n// @components\nimport OrderCard from '../OrderCard/OrderCard';\n\n// @styles\nimport './Order.scss';\n\nconst Order = () => (\n    <Query query={getPizzaSizeByNameFromState}>\n        {({ data: { selectedPizzaSizeFromMenu }, loading }) => {\n            if (loading) return null;\n            return (\n                <Query\n                    fetchPolicy=\"network-only\"\n                    query={getPizzaSizeByName}\n                    skip={!selectedPizzaSizeFromMenu}\n                    variables={{ selectedPizzaSizeFromMenu }}\n                >\n                    {({ data: { pizzaSizeByName }, loading }) => {\n                        if (loading) return null;\n                        return (\n                            <div className=\"order__selection\">\n                                <OrderCard data={pizzaSizeByName} />\n                            </div>\n                        );\n                    }}\n                </Query>\n            );\n        }}\n    </Query>\n);\n\nexport default Order;\n","// @vendors\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\nimport IconButton from '@material-ui/core/IconButton';\nimport DeleteIcon from '@material-ui/icons/Delete';\n\n// @styles\nimport './CartCard.scss';\n\n// Overriding material-ui classes\nconst styles = () => ({\n    root: {\n        width: '100%',\n        maxWidth: 360\n    },\n    listItem: {\n        borderBottom: '1px solid #f4f4f4'\n    }\n});\n\nclass CartCard extends Component {\n    state = {\n        totalPrice: 0\n    };\n\n    componentDidMount() {\n        this.updateTotalPrice();\n    }\n\n    componentDidUpdate(prevProps) {\n        const prevPropsCartItems = prevProps.cartItems;\n        const { cartItems } = this.props;\n\n        if (prevPropsCartItems !== cartItems) {\n            this.updateTotalPrice();\n        }\n    }\n\n    updateTotalPrice = () => {\n        const { cartItems } = this.props;\n        const totalPriceOfPizzas = [];\n        // Push total price of toppings to array 'totalPriceOfToppings'\n        // Next find the sum of totalPriceOfToppings and setState to totalPrice\n        cartItems.map(value => totalPriceOfPizzas.push(value.totalPrice));\n        const sumOfTotalPriceOfPizzas = totalPriceOfPizzas.reduce((a, b) => a + b, 0);\n        this.setState({ totalPrice: sumOfTotalPriceOfPizzas });\n    }\n\n    getIndexToRemoveItem = index => () => {\n        const { removeItem } = this.props;\n        removeItem(index);\n    }\n\n    render() {\n        const { classes, cartItems } = this.props;\n        const { totalPrice } = this.state;\n        return (\n            <div className=\"cart-card\">\n                { /*eslint-disable */ }\n                <h3 className=\"cart-card__totalPrice\">Total: ${totalPrice.toFixed(2)}</h3>\n                { /* eslint-enable */}\n                <List className={classes.root}>\n                    {cartItems.map((value, index) => (\n                        <ListItem key={index} className={classes.listItem}>\n                            <ListItemText\n                                primary={`$${value.totalPrice}`}\n                            />\n                            <ListItemText\n                                primary={value.name}\n                                secondary={`Toppings: ${value.totalToppings}`}\n                            />\n                            <ListItemSecondaryAction>\n                                <IconButton\n                                    aria-label=\"Delete\"\n                                    onClick={this.getIndexToRemoveItem(index)}\n                                >\n                                    <DeleteIcon />\n                                </IconButton>\n                            </ListItemSecondaryAction>\n                        </ListItem>\n                    ))}\n                </List>\n            </div>\n        );\n    }\n}\n\nCartCard.propTypes = {\n    cartItems: PropTypes.array.isRequired,\n    classes: PropTypes.object.isRequired,\n    removeItem: PropTypes.func.isRequired\n};\n\nexport default withStyles(styles)(CartCard);\n","import gql from 'graphql-tag';\n\nexport const getCartItems = gql`\n    query getCartItems {\n        cartItems @client {\n            name\n            totalPrice\n            totalToppings\n        }\n    }\n`;\n","import gql from 'graphql-tag';\n\nexport const removeItemFromCart = gql`\n    mutation removeItemFromCart (\n        $index: Int\n        ) {\n        removeItemFromCart(\n            index: $index\n        ) @client\n    }\n`;\n","// @vendors\nimport React from 'react';\nimport { Query, Mutation } from 'react-apollo';\n\n// @components\nimport CartCard from '../CartCard/CartCard';\n\n// @queries\nimport { getCartItems } from './queries';\n\n// @mutations\nimport { removeItemFromCart } from './mutations';\n\n// @styles\nimport './Cart.scss';\n\nconst Cart = () => (\n    <Query query={getCartItems}>\n        {({ data: { cartItems }, loading, refetch }) => {\n            if (loading) return null;\n            return (\n                <div className=\"cart__selection\">\n                    <h3 className=\"cart__title\">CART</h3>\n                    <Mutation mutation={removeItemFromCart}>\n                        {removeItemFromCart => (\n                            <CartCard\n                                cartItems={cartItems}\n                                removeItem={(index) => {\n                                    removeItemFromCart({ variables: { index } });\n                                    refetch();\n                                }}\n                            />\n                        )}\n                    </Mutation>\n                </div>\n            );\n        }}\n    </Query>\n);\n\nexport default Cart;\n","// @vendors\nimport React from 'react';\n\n// @styles\nimport './Footer.scss';\n\nconst Footer = () => (<div className=\"footer\" />);\n\nexport default Footer;\n","// @vendors\nimport React from 'react';\nimport { Switch, Route } from 'react-router-dom';\n\n// @components\nimport Header from '../Header/Header';\nimport Menu from '../Menu/Menu';\nimport Order from '../Order/Order';\nimport Cart from '../Cart/Cart';\nimport Footer from '../Footer/Footer';\n\n// @styles\nimport './App.scss';\n\nconst App = () => (\n    <div className=\"App\">\n        <Header />\n        <Switch>\n            <Route exact path=\"/\" component={Menu} />\n            <Route exact path=\"/order\" component={Order} />\n            <Route exact path=\"/cart\" component={Cart} />\n        </Switch>\n        <Footer />\n    </div>\n);\n\nexport default App;\n","// @vendors\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { MuiThemeProvider, createMuiTheme } from '@material-ui/core/styles';\nimport { BrowserRouter } from 'react-router-dom';\n\n// @apollo\nimport { ApolloClient } from 'apollo-client';\nimport { InMemoryCache } from 'apollo-cache-inmemory';\nimport { HttpLink } from 'apollo-link-http';\nimport { onError } from 'apollo-link-error';\nimport { ApolloLink } from 'apollo-link';\nimport { withClientState } from 'apollo-link-state';\nimport apolloLogger from 'apollo-link-logger';\nimport { ApolloProvider } from 'react-apollo';\n\n// @state\nimport { defaults, resolvers } from './state';\n\n// @components\nimport Root from './components/App/App';\n\nconst cache = new InMemoryCache();\nconst stateLink = withClientState({ resolvers, cache, defaults });\n\nconst link = ApolloLink.from([\n    onError(({ graphQLErrors, networkError }) => {\n        if (graphQLErrors) {\n            graphQLErrors.forEach(({ message, locations, path }) => {\n                // eslint-disable-next-line no-console\n                console.log(`[GraphQL error]: Message: ${message}, Location: ${locations}, Path: ${path}`);\n            });\n        }\n        // eslint-disable-next-line no-console\n        if (networkError) console.log(`[Network error]: ${networkError}`);\n    }),\n    apolloLogger,\n    stateLink,\n    new HttpLink({\n        uri: 'http://localhost:4000/graphql',\n        credentials: 'same-origin'\n    })\n]);\n\nconst client = new ApolloClient({\n    cache,\n    link\n});\n\n// Setting the Material-UI theme\nconst theme = createMuiTheme({\n    palette: {\n        primary: {\n            main: '#49aaca'\n        },\n        secondary: {\n            main: '#ef9a9a'\n        }\n    },\n    status: {\n        danger: 'orange'\n    },\n    typography: {\n        useNextVariants: true\n    }\n});\n\nconst App = () => (\n    <MuiThemeProvider theme={theme}>\n        <Root />\n    </MuiThemeProvider>\n);\n\nReactDOM.render(\n    <BrowserRouter>\n        <ApolloProvider client={client}>\n            <App />\n        </ApolloProvider>\n    </BrowserRouter>,\n    document.getElementById('root')\n);\n"],"sourceRoot":""}